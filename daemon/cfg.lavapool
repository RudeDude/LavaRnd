# chaos source
#

# Copyright (c) 2000-2003 by Landon Curt Noll and Simon Cooper.
# All Rights Reserved.
#
# This is open software; you can redistribute it and/or modify it under
# the terms of the version 2.1 of the GNU Lesser General Public License
# as published by the Free Software Foundation.
#
# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General
# Public License for more details.
#
# The file COPYING contains important info about Licenses and Copyrights.
# Please read the COPYING file for details about this open software.
#
# A copy of version 2.1 of the GNU Lesser General Public License is
# distributed with calc under the filename COPYING-LGPL.  You should have
# received a copy with calc; if not, write to Free Software Foundation, Inc.
# 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
#
# For more information on LavaRnd: http://www.LavaRnd.org
#
# Share and enjoy! :-)

# The chaos value is source of chaotic data for the lavapool daemon.
# It is either the command (with args) that is to be executed
# OR it is a driver used to obtain chaotic data for LavaRnd processing.
#
# If the chaos value starts with :driver, then a driver is used.
# Otherwise chaos is a command that becomes a co-process to the
# lavapool daemon and persists for the life of the lavapool daemon.
#
# Example of command to deliver LavaRnd processed data:
#
# chaos=/usr/sbin/lavaurl -v 1 -a -l logfile http://chaotic.url
#
# NOTE: The use of /usr/sbin/lavaurl is deprecated.  If the contents of
#	the URL is not very chaotic, then lavapool will produce
#	bogus values.
#
# Example of a driver used to obtain chaotic data for LavaRnd processing:
#
# chaos=:driver pwc730 /dev/video0 -L [-E] [-options] ... [savefile interval]
#
#    pwc730       - type of camera/hardware; see cam_switch[].type
#		    in ../lib/camop.c
#    /dev/video0  - camera/hardware device name
#    -L	          - configure with LavaRnd default options
#    [-E]	  - avoid frame dumping when savefile non-empty
#    [-options]   - other driver flags; see xyz_usage() in ../lib/xyz_drvr.c
#
#    [savefile interval] - optional arguments that, if given, specify where
#			   how often to write instead of process frame data.
#
#			   Without -E, aproximately every interval seconds,
#			   a frame is  written to savefile.new and it is
#			   renamed to safefile.
#
#			   With -E, safefile is checked to see if it exists
#			   aproximately every interval seconds.  If it doesn't,
#			   a frame is  written to savefile.new and it is
#			   renamed to safefile.
#
#    NOTE: Frame data that is written to a save file is NOT used to
#	   generate LavaRnd data.
#
#    NOTE: The savefile must be relative to the chrootdir if lavapool
#	   is started with the -c chrootdir option.
#
#chaos=:driver INSERT_CAMTYPE_HERE INSERT_VIDEODEV_HERE -L -E /var/tmp/luminance 60
chaos=:driver INSERT_CAMTYPE_HERE INSERT_VIDEODEV_HERE -L

# fastpool
#
# If the lavapool daemon LavaRnd pool level <= fastpool, then the
# lavapool daemon will attempt make an effort to read data from the
# chaos source in a quick fashion.  This effort will include reading
# data from chaos more often and waiting a minimal amount of time
# between chaos reads.
#
# NOTE: It must be the case that: fastpool < slowpool < poolsize
#	The default value is 1 Megabyte (1*1024*1024).
#
fastpool=1048576

# slowpool
#
# If the lavapool daemon LavaRnd pool level >= slowpool, then the
# lavapool daemon will read data from chaos source as a slower
# pace than normal.  This effort will include reading data from
# chaos less frequently and waiting longer between chaos reads.
#
# NOTE: It must be the case that: fastpool < slowpool < poolsize
#	The default value is 4 Megabytes (4*1024*1024)
#
slowpool=4194304

# poolsize
#
# The maximum LavaRnd data that the lavapool daemon will hold.  Once
# the lavapool daemon has at least this much data, it will not
# read data from the chaos source until the LavaRnd pool is drained
# below this level.
#
# NOTE: It must be the case that: fastpool < slowpool < poolsize
#	The default value is 8 Megabytes (8*1024*1024)
#
poolsize=8388608

# fast_cycle
#
# This is the shortest channel cycle wait time in seconds.
#
# A client channel requests for random data cause the current channel
# cycle wait to terminate early and the next channel cycle to be begin
# immediately in an effort to satisfy client requests for random
# data as soon as possible.  However if there are no pending client
# requests for data, then shortest channel cycle wait time will
# be fast_cycle seconds.
#
# If the lavapool daemon has <= fastpool octets (see the fastpool parameter
# above) of data, then the lavapool daemon will wait up to fast_cycle seconds
# before attempting to perform a pool filling operation.
#
# As the lavapool daemon's lava pool size grows from fastpool octets
# to slowpool octets, the min channel cycle wait time will increase
# from fast_cycle seconds to slow_cycle seconds.
#
# If the fast_cycle is too large, the lavapool daemon could initially
# accumulate data too slowly to satisfy a reasonable rate client requests.
#
# The fast_cycle value may be a floating point value.
#
# NOTE: It must be the case that: fast_cycle > 0.0
#	The default value is 0.033333 (~1/30 of a second)
#
fast_cycle=0.033333

# slow_cycle
#
# This is the longest channel cycle wait time in seconds.
#
# As the lavapool daemon's lava pool size grows from fastpool octets
# to slowpool octets, the min channel cycle wait time will increase
# from fast_cycle seconds to slow_cycle seconds.
#
# If slow_cycle is too small, then the lavapool daemon will fill its
# lava pool quickly while consuming system resources at a maximum rate.
#
# The slow_cycle value may be a floating point value.
#
# NOTE: It must be the case that: slow_cycle > fast_cycle > 0.0
#	The default value is 20.0.
#
slow_cycle=20.0

# maxclients
#
# The maxclients value is the maximum number of simultaneous client
# connections that can request random data.
#
# NOTE: It must be the case that: maxclients > 0
#	The default value is 16.
#
maxclients=16

# timeout
#
# This is the maximum number of seconds that the lavapool daemon will
# wait for channel I/O.
#
# If timeout is 0.0 (or just 0), then the lavapool daemon will wait
# forever for channel I/O to complete.
#
# The timeout value may be a floating point value.
#
# NOTE: It must be the case that: timeout >= 0.0
#	The default value is 6.0.
#
timeout=6.0

# prefix
#
# If the prefix value is 1, then some system state will be added
# to the URL return or chaos driver output for LavaRnd processing.
#
# The system state data is very likely to be poor in entropy.  It does,
# however, serve as a salt.
#
# This state only effects the LavaRnd processing of chaotic data.
# It does NOT effect "system stuff" mixing during the seeding
# of the s100 generator for example.
#
# If the prefix value is 0, then no system state will be used.
#
# NOTE: It must be the case that: prefix is 0 or 1.
#	The default value is 1.
#
prefix=1
